JDBC
1、JDBC是什么？
	・Java数据库连接
	・一系列的【类和库】
	・sun公司提供的【标准】（接口）
	・java.sql.*包
2、JDBC驱动
	・接口和类的具体实现
	・数据库厂商或者第三方提供
3、JDBC API的常用接口
	1.Driver接口
		・驱动程序来实现  com.mysql.jdbc.Driver
		・必须加载到项目中
	2.DriverManager类
		・加载驱动
			・registerDriver该方法会造成驱动重复注册，一般不使用
			・【掌握】使用Class.forName(Driver类的全类名)来代替
		・创建数据库连接
			Connection getConnection(url,user,password)
			・url数据库地址
				一级协议:二级协议://主机地址:端口号/数据库名称?参数=参数值&参数=参数值……
				jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8
				 【提醒】如果是新版本的数据库和数据库驱动，需求修改驱动类名，同时url需要附带SSL、时间声明
			・user数据库用户名
				root
			・password数据库密码
				1234（机房）   123456（笔记本）
	3.Connection接口
		表示的是数据库连接
		作用：创建命令对象
			・创建静态的命令对象 Statement
			・创建预编译的命令对象（必须提供sql让其预编译） PrepareStatement
		应用：sql语句中没有参数，两个都可以用；如果有参数，建议时候后者
			select * from user where name="???"
	4.Statement接口（执行SQL语句）
		1、查询语句 select
			ResultSet结果集对象，表示查询的结果
		2、更新语句 insert/update/delete	
			int整型数据，表示影响的条数
				【说明】返回值是0，失败
			if(n>0){成功}
			else{失败}
			-------------------------------------------------
			preparedStatement
				1、使用？来代替未知的参数
				2、使用setXXX方法来赋值
				3、第一个参数表示问号的位置
			优点：
				1、预编译的命令，SQL语句只编译1次，执行效率更高；
				2、可读性更高，更易于维护
				"insert into user values("+id+","+name+","+email+")";
				3、更安全  预编译的命令对象能够有效防止SQL注入式攻击
			
	5、ResultSet结果集
		1.next()来移动指针
		2.while()来遍历结果集
		3.getXXX()来获得列数据	
			・列索引 第N列
			・列名字  字段名
	6、资源释放
		1.资源包括 ：连接、命令对象、结果集
		2.释放方法：close
		3.释放顺序：结果集-->命令对象-->连接
	
	
	
	
	
	